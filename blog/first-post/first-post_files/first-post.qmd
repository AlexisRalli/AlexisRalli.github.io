---
title: "Quarto Test"
description: "This post is simply to test quarto and give some useful notes to myself and other wanting to build a similar website!"
author:
  - id: Alexis Ralli
    number: 1
    orcid: 0000-0001-8953-1235
    email: alexis.ralli@tufts.edu
date: "2025-09-02"
categories:
  - Quarto
filters:
  - pyodide

reference-location: margin
---


## Logos
To get logos we need to install [`academicons`](https://github.com/schochastics/academicons):

```default
quarto install extension schochastics/academicons
```
This allows use of things like the Google Scholar icon. See [link](https://jpswalsh.github.io/academicons/) for example icons.


The `posts/_metadata.yml` file gives the shared options for posts [see](https://quarto.org/docs/websites/website-blog.html)

## Selecting correct conda envirnoment
For VS Code, sometimes the wrong conda envirnoment can be selected. The following needs to be done:


1. Open VS Code and click on the Command Palette[^1]
2. Type and select Python: Select Interpreter

[^1]: `Ctrl + Shift + P` or `Cmd + Shift + P`

## Live Python code
[`quarto-pyodide`](https://github.com/coatless-quarto/pyodide) allows for pyodide-enabled code within a  Quarto HTML document.

To install:

```default
quarto add coatless-quarto/pyodide
```

The usage is then simply:

```{pyodide-python}
## install necessary packages:
import micropip as mp
await mp.install("pandas")

## import packages:
import pandas as pd

data = pd.DataFrame({
  "foo": ["az", "by", "cx", "dw"],
  "bar": [3, 14, 15, 92],
  "baz": [True, False, True, None],
})

print(data)

import platform
print('python-version:', platform.python_version())

### note users can add more code here!

```



## Show a molecule

Plot HTML of a molecular system:

<iframe src="3Dmol_visualization.html" width="100%" height="500"></iframe>

Plot HTML of a molecular system with a border:

<iframe src="3Dmol_visualization.html" 
        width="100%" 
        height="500" 
        style="border: 2px solid #444; border-radius: 8px;">
</iframe>


## Shiny

[Shiny](https://shiny.posit.co/py/) is a Python library for  building interactive web apps. See the quarto [dashboards-dashboard](https://quarto.org/docs/dashboards/interactivity/shiny-python/index.html) overview. Pay close attention to the `context: setup` method, as it will affect the efficiency of the website.

## Giscus

[Giscus](https://giscus.app/) allows for comments on blog post by leveraging GitHub discussions. This allows for vistors who have GitHub to leave comments on blog posts.
